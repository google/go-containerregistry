steps:
- name: golang
  entrypoint: sh
  args:
  - -c
  - |
    set -ex

    export GO111MODULE=off
    export KO_DOCKER_REPO="gcr.io/$PROJECT_ID"
    export GOFLAGS="-ldflags=-X=github.com/google/go-containerregistry/cmd/crane/cmd.Version=$COMMIT_SHA"

    # Put contents of /workspace on GOPATH.
    shadow=$$GOPATH/src/github.com/google/go-containerregistry
    link_dir=$$(dirname "$$shadow")
    mkdir -p $$link_dir
    ln -s $$PWD $$shadow || stat $$shadow

    # Install ko from release.
    curl -L -o ko.tar.gz https://github.com/google/ko/releases/download/v0.6.0/ko_0.6.0_Linux_i386.tar.gz
    tar xvfz ko.tar.gz
    chmod +x ko
    alias ko=./ko

    # Use the ko binary to build the crane and gcrane builder images.
    ko publish --platform=all -B github.com/google/go-containerregistry/cmd/crane -t latest -t "$COMMIT_SHA"
    ko publish --platform=all -B github.com/google/go-containerregistry/cmd/gcrane -t latest -t "$COMMIT_SHA"

    # Use the ko binary to build the crane and gcrane builder *debug* images.
    export KO_CONFIG_PATH=/workspace/.ko/debug/
    ko publish --platform=all -B github.com/google/go-containerregistry/cmd/crane -t debug
    ko publish --platform=all -B github.com/google/go-containerregistry/cmd/gcrane -t debug

# Use the crane builder to get the digest for crane and gcrane.
- name: gcr.io/$PROJECT_ID/crane
  args: ['digest', 'gcr.io/$PROJECT_ID/crane']

- name: gcr.io/$PROJECT_ID/crane
  args: ['digest', 'gcr.io/$PROJECT_ID/gcrane']
